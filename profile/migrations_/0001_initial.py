# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-08-09 02:57
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import email_confirmation.models
import mobile_confirmation.models
import phonenumber_field.modelfields
import profile.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(default=b'+201005866658', max_length=128)),
                ('shopname', models.SlugField(default=b'ftrina-store')),
                ('photo', models.URLField(default=b'https://res.cloudinary.com/ftrina/image/upload/v1469046333/default_user_avatar_ljpbex.png')),
                ('photo_public_id', models.CharField(blank=True, default=b'default_user_avatar_ljpbex', max_length=256, null=True)),
                ('shop_created', models.BooleanField(default=False)),
                ('about_me', models.TextField(blank=True, null=True)),
                ('website_url', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[(b'm', b'Male'), (b'f', b'Female')], max_length=1, null=True)),
                ('profile_language', models.CharField(blank=True, choices=[(b'arabic', b'Arabic'), (b'english', b'English'), (b'chinese', b'Chinese'), (b'french', b'French')], max_length=1, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('premium', models.BooleanField(default=False)),
                ('verified_business', models.BooleanField(default=False)),
                ('verified_person', models.BooleanField(default=False)),
                ('vendor', models.BooleanField(default=False)),
                ('shipper', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('preferred_language', models.CharField(choices=[(b'ar', b'Arabic'), (b'en', b'English'), (b'zh-hans', b'Chinese'), (b'fr', b'French')], default=b'en', max_length=7)),
                ('blog_url', models.TextField(blank=True, null=True)),
                ('access_token', models.TextField(blank=True, help_text=b'Facebook token for offline access', null=True)),
                ('raw_data', models.TextField(blank=True, null=True)),
                ('facebook_profile_url', models.TextField(blank=True, null=True)),
                ('facebook_name', models.CharField(blank=True, max_length=255, null=True)),
                ('facebook_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('facebook_open_graph', models.NullBooleanField(help_text=b'Determines if this user want to share via open graph')),
                ('new_token_required', models.BooleanField(default=False, help_text=b'Set to true if the access token is outdated or lacks permissions')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model, email_confirmation.models.UserEmailConfirmation, mobile_confirmation.models.UserMobileConfirmation),
            managers=[
                ('objects', profile.models.ProfileManager()),
            ],
        ),
    ]
